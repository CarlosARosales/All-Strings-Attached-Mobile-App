{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React, { FlatList, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth, db } from \"../firebase\";\nimport Settings from \"./Settings\";\nimport Record from \"./Record\";\nimport PracticeLog from \"./PracticeLog\";\nimport DeviceManager from \"./DeviceManager\";\nimport styles from \"./Styles\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport Instrument from \"./Instrument\";\n\nfunction Instruments() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      instrument = _useState2[0],\n      setInstrument = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      instruments = _useState6[0],\n      setInstruments = _useState6[1];\n\n  var ref = firestore().collection(\"users\").doc(\"user1\");\n  useEffect(function () {\n    return ref.onSnapshot(function (querySnapshot) {\n      var list = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            instrumentName = _doc$data.instrumentName,\n            model = _doc$data.model,\n            year = _doc$data.year;\n\n        list.push({\n          id: doc.id,\n          instrumentName: instrumentName,\n          model: model,\n          year: year\n        });\n      });\n      setInstruments(list);\n\n      if (loading) {\n        return null;\n      }\n    });\n  }, []);\n  return React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: instruments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Instrument, item);\n    }\n  });\n}\n\nfunction HomeScreen() {\n  var _auth$currentUser;\n\n  var navigation = useNavigation();\n\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Hello \", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email), React.createElement(TouchableOpacity, {\n    onPress: handleSignOut,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Sign out\")), React.createElement(Instruments, null));\n}\n\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: {\n      tabBarInactiveTintColor: \"#FFFFFF\",\n      tabBarInactiveBackgroundColor: \"#161616\",\n      tabBarActiveBackgroundColor: \"#161616\"\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    component: HomeScreen\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"devices\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"DeviceManager\",\n    component: DeviceManager\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"clock-time-four-outline\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"PracticeLog\",\n    component: PracticeLog\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"radiobox-marked\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"Record\",\n    component: Record\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color,\n            size = _ref6.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account\",\n          color: \"white\",\n          size: size\n        });\n      }\n    },\n    name: \"Settings\",\n    component: Settings\n  }));\n}\n\nfunction Home() {\n  return React.createElement(HomeScreen, null), React.createElement(MyTabs, null);\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/Senior Design App/logger-app/screens/HomeScreen.js"],"names":["useNavigation","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","React","FlatList","useState","useEffect","auth","db","Settings","Record","PracticeLog","DeviceManager","styles","firestore","Instrument","Instruments","instrument","setInstrument","loading","setLoading","instruments","setInstruments","ref","collection","doc","onSnapshot","querySnapshot","list","forEach","data","instrumentName","model","year","push","id","flex","item","HomeScreen","navigation","handleSignOut","signOut","then","replace","catch","error","alert","message","container","buttonText","currentUser","email","button","Tab","MyTabs","tabBarInactiveTintColor","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","headerShown","tabBarIcon","color","size","Home"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport React, { FlatList, useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth, db } from \"../firebase\";\r\nimport Settings from \"./Settings\";\r\nimport Record from \"./Record\";\r\nimport PracticeLog from \"./PracticeLog\";\r\nimport DeviceManager from \"./DeviceManager\";\r\nimport styles from \"./Styles\";\r\nimport firestore from \"@react-native-firebase/firestore\";\r\nimport Instrument from \"./Instrument\";\r\n\r\nfunction Instruments() {\r\n  const [instrument, setInstrument] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [instruments, setInstruments] = useState([]);\r\n\r\n  const ref = firestore().collection(\"users\").doc(\"user1\");\r\n\r\n  useEffect(() => {\r\n    return ref.onSnapshot((querySnapshot) => {\r\n      const list = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const { instrumentName, model, year } = doc.data();\r\n        list.push({\r\n          id: doc.id,\r\n          instrumentName,\r\n          model,\r\n          year,\r\n        });\r\n      });\r\n\r\n      setInstruments(list);\r\n\r\n      if (loading) {\r\n        return null;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <FlatList\r\n      style={{ flex: 1 }}\r\n      data={instruments}\r\n      renderItem={({ item }) => <Instrument {...item} />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction HomeScreen() {\r\n  const navigation = useNavigation();\r\n  const handleSignOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigation.replace(\"Login\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.buttonText}>Hello {auth.currentUser?.email}</Text>\r\n      <TouchableOpacity onPress={handleSignOut} style={styles.button}>\r\n        <Text style={styles.buttonText}>Sign out</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Instruments></Instruments>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarInactiveTintColor: \"#FFFFFF\",\r\n        tabBarInactiveBackgroundColor: \"#161616\",\r\n        tabBarActiveBackgroundColor: \"#161616\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n          ),\r\n        }}\r\n        component={HomeScreen}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"devices\" color={color} size={size} />\r\n          ),\r\n        }}\r\n        name=\"DeviceManager\"\r\n        component={DeviceManager}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"clock-time-four-outline\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"PracticeLog\"\r\n        component={PracticeLog}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"radiobox-marked\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"Record\"\r\n        component={Record}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"account\"\r\n              color={\"white\"}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"Settings\"\r\n        component={Settings}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (<HomeScreen></HomeScreen>), (<MyTabs></MyTabs>);\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}