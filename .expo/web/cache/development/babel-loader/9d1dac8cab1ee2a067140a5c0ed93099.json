{"ast":null,"code":"import { useNavigation } from \"@react-navigation/core\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React, { FlatList, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport Settings from \"./Settings\";\nimport Record from \"./Record\";\nimport PracticeLog from \"./PracticeLog\";\nimport DeviceManager from \"./DeviceManager\";\nimport styles from \"./Styles\";\nimport { getFirestore } from \"firebase/firestore\";\nimport firebase from \"firebase/app\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/reducers/index\";\n\nfunction HomeScreen() {\n  var _auth$currentUser;\n\n  var navigation = useNavigation();\n\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Hello \", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email), React.createElement(TouchableOpacity, {\n    onPress: handleSignOut,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Sign out\")));\n}\n\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: {\n      tabBarInactiveTintColor: \"#FFFFFF\",\n      tabBarInactiveBackgroundColor: \"#161616\",\n      tabBarActiveBackgroundColor: \"#161616\"\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    component: HomeScreen\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"devices\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"DeviceManager\",\n    component: DeviceManager\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"clock-time-four-outline\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"PracticeLog\",\n    component: PracticeLog\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"radiobox-marked\",\n          color: color,\n          size: size\n        });\n      }\n    },\n    name: \"Record\",\n    component: Record\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account\",\n          color: \"white\",\n          size: size\n        });\n      }\n    },\n    name: \"Settings\",\n    component: Settings\n  }));\n}\n\nfunction Home() {\n  return React.createElement(HomeScreen, null), React.createElement(MyTabs, null);\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/Senior Design App/logger-app/screens/HomeScreen.js"],"names":["useNavigation","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","React","FlatList","useState","useEffect","auth","Settings","Record","PracticeLog","DeviceManager","styles","getFirestore","firebase","connect","bindActionCreators","fetchUser","HomeScreen","navigation","handleSignOut","signOut","then","replace","catch","error","alert","message","container","buttonText","currentUser","email","button","Tab","MyTabs","tabBarInactiveTintColor","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","headerShown","tabBarIcon","color","size","Home"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport React, { FlatList, useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { auth } from \"../firebase\";\r\nimport Settings from \"./Settings\";\r\nimport Record from \"./Record\";\r\nimport PracticeLog from \"./PracticeLog\";\r\nimport DeviceManager from \"./DeviceManager\";\r\nimport styles from \"./Styles\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport firebase from \"firebase/app\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchUser } from \"../redux/actions/reducers/index\";\r\n\r\nfunction HomeScreen() {\r\n  const navigation = useNavigation();\r\n  const handleSignOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigation.replace(\"Login\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.buttonText}>Hello {auth.currentUser?.email}</Text>\r\n      <TouchableOpacity onPress={handleSignOut} style={styles.button}>\r\n        <Text style={styles.buttonText}>Sign out</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarInactiveTintColor: \"#FFFFFF\",\r\n        tabBarInactiveBackgroundColor: \"#161616\",\r\n        tabBarActiveBackgroundColor: \"#161616\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n          ),\r\n        }}\r\n        component={HomeScreen}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"devices\" color={color} size={size} />\r\n          ),\r\n        }}\r\n        name=\"DeviceManager\"\r\n        component={DeviceManager}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"clock-time-four-outline\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"PracticeLog\"\r\n        component={PracticeLog}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"radiobox-marked\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"Record\"\r\n        component={Record}\r\n      />\r\n      <Tab.Screen\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"account\"\r\n              color={\"white\"}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n        name=\"Settings\"\r\n        component={Settings}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (<HomeScreen></HomeScreen>), (<MyTabs></MyTabs>);\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}